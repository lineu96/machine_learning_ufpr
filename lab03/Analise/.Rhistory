df_ic <- purrr::map_dfr(resul_fit[1:2], org_resul, .id = "Resposta")
df_ic %>%
filter(covar != "Intercepto") %>%
mutate(covar = fct_inorder(covar),
param = fct_inorder(param)) %>%
ggplot(aes(x = param, y = Estimates,
shape = Resposta,
#linetype = resp,
color = covar)) +
geom_hline(yintercept = 0, linetype = 2, size = 0.4) +
geom_errorbar(aes(ymin = linf, ymax = lsup),
width = 0.5,
position = position_dodge(width = 0.3)) +
geom_pointrange(aes(ymin = linf, ymax = lsup),
fatten = 3.7,
position = position_dodge(width = 0.3)) +
theme_bw() +
xlab("Parâmetros") +
ylab("Estimativas") +
#geom_vline(xintercept = cumsum(resul_manova$Df[-1]/2)[-10] + 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
library(ggplot2)
df_ic %>%
filter(covar != "Intercepto") %>%
mutate(covar = fct_inorder(covar),
param = fct_inorder(param)) %>%
ggplot(aes(x = param, y = Estimates,
shape = Resposta,
#linetype = resp,
color = covar)) +
geom_hline(yintercept = 0, linetype = 2, size = 0.4) +
geom_errorbar(aes(ymin = linf, ymax = lsup),
width = 0.5,
position = position_dodge(width = 0.3)) +
geom_pointrange(aes(ymin = linf, ymax = lsup),
fatten = 3.7,
position = position_dodge(width = 0.3)) +
theme_bw() +
xlab("Parâmetros") +
ylab("Estimativas") +
#geom_vline(xintercept = cumsum(resul_manova$Df[-1]/2)[-10] + 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
df_ic %>%
filter(covar != "Intercepto") %>%
mutate(covar = fct_inorder(covar),
param = fct_inorder(param)) %>%
ggplot(aes(x = param, y = Estimates,
shape = Resposta,
#linetype = resp,
color = covar)) +
geom_hline(yintercept = 0, linetype = 2, size = 0.4) +
geom_errorbar(aes(ymin = linf, ymax = lsup),
width = 0.5,
position = position_dodge(width = 0.3)) +
geom_pointrange(aes(ymin = linf, ymax = lsup),
fatten = 3.7,
position = position_dodge(width = 0.3)) +
theme_bw() +
xlab("Parâmetros") +
ylab("Estimativas") +
labs(color = "Covariável") +
#geom_vline(xintercept = cumsum(resul_manova$Df[-1]/2)[-10] + 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
load("data/simula_result.RData")
# 50
simul_pois50 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(table(pois_50_m5$flag)[1]/1000, table(pois_50_m5$flag)[2]/1000,
table(pois_50_m4$flag)[1]/1000, table(pois_50_m4$flag)[2]/1000,
table(pois_50_m3$flag)[1]/1000, table(pois_50_m3$flag)[2]/1000,
table(pois_50_m2$flag)[1]/1000, table(pois_50_m2$flag)[2]/1000,
table(pois_50_m1$flag)[1]/1000, table(pois_50_m1$flag)[2]/1000,
table(pois_50_0$flag)[1]/1000, table(pois_50_0$flag)[2]/1000,
table(pois_50_1$flag)[1]/1000, table(pois_50_1$flag)[2]/1000,
table(pois_50_2$flag)[1]/1000, table(pois_50_2$flag)[2]/1000,
table(pois_50_3$flag)[1]/1000, table(pois_50_3$flag)[2]/1000,
table(pois_50_4$flag)[1]/1000, table(pois_50_4$flag)[2]/1000,
table(pois_50_5$flag)[1]/1000, table(pois_50_5$flag)[2]/1000)
)
# 100
simul_pois100 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(table(pois_100_m5$flag)[1]/1000, table(pois_100_m5$flag)[2]/1000,
table(pois_100_m4$flag)[1]/1000, table(pois_100_m4$flag)[2]/1000,
table(pois_100_m3$flag)[1]/1000, table(pois_100_m3$flag)[2]/1000,
table(pois_100_m2$flag)[1]/1000, table(pois_100_m2$flag)[2]/1000,
table(pois_100_m1$flag)[1]/1000, table(pois_100_m1$flag)[2]/1000,
table(pois_100_0$flag)[1]/1000, table(pois_100_0$flag)[2]/1000,
table(pois_100_1$flag)[1]/1000, table(pois_100_1$flag)[2]/1000,
table(pois_100_2$flag)[1]/1000, table(pois_100_2$flag)[2]/1000,
table(pois_100_3$flag)[1]/1000, table(pois_100_3$flag)[2]/1000,
table(pois_100_4$flag)[1]/1000, table(pois_100_4$flag)[2]/1000,
0, table(pois_100_5$flag)[1]/1000)
)
# 250
simul_pois250 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(pois_250_m5$flag)[1]/1000,
0, table(pois_250_m4$flag)[1]/1000,
0, table(pois_250_m3$flag)[1]/1000,
table(pois_250_m2$flag)[1]/1000, table(pois_250_m2$flag)[2]/1000,
table(pois_250_m1$flag)[1]/1000, table(pois_250_m1$flag)[2]/1000,
table(pois_250_0$flag)[1]/1000, table(pois_250_0$flag)[2]/1000,
table(pois_250_1$flag)[1]/1000, table(pois_250_1$flag)[2]/1000,
table(pois_250_2$flag)[1]/1000, table(pois_250_2$flag)[2]/1000,
0, table(pois_250_3$flag)[1]/1000,
0, table(pois_250_4$flag)[1]/1000,
0, table(pois_250_5$flag)[1]/1000)
)
# 500
simul_pois500 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(pois_500_m5$flag)[1]/1000,
0, table(pois_500_m4$flag)[1]/1000,
0, table(pois_500_m3$flag)[1]/1000,
0, table(pois_500_m2$flag)[1]/1000,
table(pois_500_m1$flag)[1]/1000, table(pois_500_m1$flag)[2]/1000,
table(pois_500_0$flag)[1]/1000, table(pois_500_0$flag)[2]/1000,
table(pois_500_1$flag)[1]/1000, table(pois_500_1$flag)[2]/1000,
0, table(pois_500_2$flag)[1]/1000,
0, table(pois_500_3$flag)[1]/1000,
0, table(pois_500_4$flag)[1]/1000,
0, table(pois_500_5$flag)[1]/1000)
)
# 1000
simul_pois1000 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(pois_1000_m5$flag)[1]/1000,
0, table(pois_1000_m4$flag)[1]/1000,
0, table(pois_1000_m3$flag)[1]/1000,
0, table(pois_1000_m2$flag)[1]/1000,
table(pois_1000_m1$flag)[1]/1000, table(pois_1000_m1$flag)[2]/1000,
table(pois_1000_0$flag)[1]/1000, table(pois_1000_0$flag)[2]/1000,
table(pois_1000_1$flag)[1]/1000, table(pois_1000_1$flag)[2]/1000,
0, table(pois_1000_2$flag)[1]/1000,
0, table(pois_1000_3$flag)[1]/1000,
0, table(pois_1000_4$flag)[1]/1000,
0, table(pois_1000_5$flag)[1]/1000)
)
# 50
simul_binom50 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(table(binom_50_m5$flag)[1]/1000, table(binom_50_m5$flag)[2]/1000,
table(binom_50_m4$flag)[1]/1000, table(binom_50_m4$flag)[2]/1000,
table(binom_50_m3$flag)[1]/1000, table(binom_50_m3$flag)[2]/1000,
table(binom_50_m2$flag)[1]/1000, table(binom_50_m2$flag)[2]/1000,
table(binom_50_m1$flag)[1]/1000, table(binom_50_m1$flag)[2]/1000,
table(binom_50_0$flag)[1]/1000, table(binom_50_0$flag)[2]/1000,
table(binom_50_1$flag)[1]/1000, table(binom_50_1$flag)[2]/1000,
table(binom_50_2$flag)[1]/1000, table(binom_50_2$flag)[2]/1000,
table(binom_50_3$flag)[1]/1000, table(binom_50_3$flag)[2]/1000,
table(binom_50_4$flag)[1]/1000, table(binom_50_4$flag)[2]/1000,
table(binom_50_5$flag)[1]/1000, table(binom_50_5$flag)[2]/1000)
)
# 100
simul_binom100 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(table(binom_100_m5$flag)[1]/1000, table(binom_100_m5$flag)[2]/1000,
table(binom_100_m4$flag)[1]/1000, table(binom_100_m4$flag)[2]/1000,
table(binom_100_m3$flag)[1]/1000, table(binom_100_m3$flag)[2]/1000,
table(binom_100_m2$flag)[1]/1000, table(binom_100_m2$flag)[2]/1000,
table(binom_100_m1$flag)[1]/1000, table(binom_100_m1$flag)[2]/1000,
table(binom_100_0$flag)[1]/1000, table(binom_100_0$flag)[2]/1000,
table(binom_100_1$flag)[1]/1000, table(binom_100_1$flag)[2]/1000,
table(binom_100_2$flag)[1]/1000, table(binom_100_2$flag)[2]/1000,
table(binom_100_3$flag)[1]/1000, table(binom_100_3$flag)[2]/1000,
table(binom_100_4$flag)[1]/1000, table(binom_100_4$flag)[2]/1000,
table(binom_100_5$flag)[1]/1000, table(binom_100_5$flag)[2]/1000)
)
# 250
simul_binom250 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(binom_250_m5$flag)[1]/1000,
table(binom_250_m4$flag)[1]/1000, table(binom_250_m4$flag)[2]/1000,
table(binom_250_m3$flag)[1]/1000, table(binom_250_m3$flag)[2]/1000,
table(binom_250_m2$flag)[1]/1000, table(binom_250_m2$flag)[2]/1000,
table(binom_250_m1$flag)[1]/1000, table(binom_250_m1$flag)[2]/1000,
table(binom_250_0$flag)[1]/1000, table(binom_250_0$flag)[2]/1000,
table(binom_250_1$flag)[1]/1000, table(binom_250_1$flag)[2]/1000,
table(binom_250_2$flag)[1]/1000, table(binom_250_2$flag)[2]/1000,
table(binom_250_3$flag)[1]/1000, table(binom_250_3$flag)[2]/1000,
table(binom_250_4$flag)[1]/1000, table(binom_250_4$flag)[2]/1000,
table(binom_250_5$flag)[1]/1000, table(binom_250_5$flag)[2]/1000)
)
# 500
simul_binom500 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(binom_500_m5$flag)[1]/1000,
0, table(binom_500_m4$flag)[1]/1000,
table(binom_500_m3$flag)[1]/1000, table(binom_500_m3$flag)[2]/1000,
table(binom_500_m2$flag)[1]/1000, table(binom_500_m2$flag)[2]/1000,
table(binom_500_m1$flag)[1]/1000, table(binom_500_m1$flag)[2]/1000,
table(binom_500_0$flag)[1]/1000, table(binom_500_0$flag)[2]/1000,
table(binom_500_1$flag)[1]/1000, table(binom_500_1$flag)[2]/1000,
table(binom_500_2$flag)[1]/1000, table(binom_500_2$flag)[2]/1000,
table(binom_500_3$flag)[1]/1000, table(binom_500_3$flag)[2]/1000,
0, table(binom_500_4$flag)[1]/1000,
0, table(binom_500_5$flag)[1]/1000)
)
# 1000
simul_binom1000 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(binom_1000_m5$flag)[1]/1000,
0, table(binom_1000_m4$flag)[1]/1000,
0, table(binom_1000_m3$flag)[1]/1000,
table(binom_1000_m2$flag)[1]/1000, table(binom_1000_m2$flag)[2]/1000,
table(binom_1000_m1$flag)[1]/1000, table(binom_1000_m1$flag)[2]/1000,
table(binom_1000_0$flag)[1]/1000, table(binom_1000_0$flag)[2]/1000,
table(binom_1000_1$flag)[1]/1000, table(binom_1000_1$flag)[2]/1000,
table(binom_1000_2$flag)[1]/1000, table(binom_1000_2$flag)[2]/1000,
0, table(binom_1000_3$flag)[1]/1000,
0, table(binom_1000_4$flag)[1]/1000,
0, table(binom_1000_5$flag)[1]/1000)
)
# 50
simul_beta50 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(beta_50_m5$flag)[1]/1000,
table(beta_50_m4$flag)[1]/1000, table(beta_50_m4$flag)[2]/1000,
table(beta_50_m3$flag)[1]/1000, table(beta_50_m3$flag)[2]/1000,
table(beta_50_m2$flag)[1]/1000, table(beta_50_m2$flag)[2]/1000,
table(beta_50_m1$flag)[1]/1000, table(beta_50_m1$flag)[2]/1000,
table(beta_50_0$flag)[1]/1000, table(beta_50_0$flag)[2]/1000,
table(beta_50_1$flag)[1]/1000, table(beta_50_1$flag)[2]/1000,
table(beta_50_2$flag)[1]/1000, table(beta_50_2$flag)[2]/1000,
table(beta_50_3$flag)[1]/1000, table(beta_50_3$flag)[2]/1000,
table(beta_50_4$flag)[1]/1000, table(beta_50_4$flag)[2]/1000,
table(beta_50_5$flag)[1]/1000, table(beta_50_5$flag)[2]/1000)
)
# 100
simul_beta100 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(beta_100_m5$flag)[1]/1000,
table(beta_100_m4$flag)[1]/1000, table(beta_100_m4$flag)[2]/1000,
table(beta_100_m3$flag)[1]/1000, table(beta_100_m3$flag)[2]/1000,
table(beta_100_m2$flag)[1]/1000, table(beta_100_m2$flag)[2]/1000,
table(beta_100_m1$flag)[1]/1000, table(beta_100_m1$flag)[2]/1000,
table(beta_100_0$flag)[1]/1000, table(beta_100_0$flag)[2]/1000,
table(beta_100_1$flag)[1]/1000, table(beta_100_1$flag)[2]/1000,
table(beta_100_2$flag)[1]/1000, table(beta_100_2$flag)[2]/1000,
table(beta_100_3$flag)[1]/1000, table(beta_100_3$flag)[2]/1000,
0, table(beta_100_4$flag)[1]/1000,
0, table(beta_100_5$flag)[1]/1000)
)
# 250
simul_beta250 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(beta_250_m5$flag)[1]/1000,
0, table(beta_250_m4$flag)[1]/1000,
0, table(beta_250_m3$flag)[1]/1000,
table(beta_250_m2$flag)[1]/1000, table(beta_250_m2$flag)[2]/1000,
table(beta_250_m1$flag)[1]/1000, table(beta_250_m1$flag)[2]/1000,
table(beta_250_0$flag)[1]/1000, table(beta_250_0$flag)[2]/1000,
table(beta_250_1$flag)[1]/1000, table(beta_250_1$flag)[2]/1000,
table(beta_250_2$flag)[1]/1000, table(beta_250_2$flag)[2]/1000,
0, table(beta_250_3$flag)[1]/1000,
0, table(beta_250_4$flag)[1]/1000,
0, table(beta_250_5$flag)[1]/1000)
)
# 500
simul_beta500 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(beta_500_m5$flag)[1]/1000,
0, table(beta_500_m4$flag)[1]/1000,
0, table(beta_500_m3$flag)[1]/1000,
0, table(beta_500_m2$flag)[1]/1000,
table(beta_500_m1$flag)[1]/1000, table(beta_500_m1$flag)[2]/1000,
table(beta_500_0$flag)[1]/1000, table(beta_500_0$flag)[2]/1000,
table(beta_500_1$flag)[1]/1000, table(beta_500_1$flag)[2]/1000,
0, table(beta_500_2$flag)[1]/1000,
0, table(beta_500_3$flag)[1]/1000,
0, table(beta_500_4$flag)[1]/1000,
0, table(beta_500_5$flag)[1]/1000))
# 1000
simul_beta1000 <- data.frame(
betas = sort(rep(seq(-0.5, 0.5, 0.1), 2)),
rej = rep(c("Não Rejeita", "Rejeita"),11),
valor = c(0, table(beta_1000_m5$flag)[1]/1000,
0, table(beta_1000_m4$flag)[1]/1000,
1,0,
1,0,
table(beta_1000_m1$flag)[1]/1000, table(beta_1000_m1$flag)[2]/1000,
table(beta_1000_0$flag)[1]/1000, table(beta_1000_0$flag)[2]/1000,
table(beta_1000_1$flag)[1]/1000, table(beta_1000_1$flag)[2]/1000,
0, table(beta_1000_2$flag)[1]/1000,
1,0,
0, table(beta_1000_4$flag)[1]/1000,
0, table(beta_1000_5$flag)[1]/1000)
)
simul_pois50$n <- rep('Poisson, n=50', nrow(simul_pois50))
simul_pois100$n <- rep('Poisson, n=100', nrow(simul_pois50))
simul_pois250$n <- rep('Poisson, n=250', nrow(simul_pois50))
simul_pois500$n <- rep('Poisson, n=500', nrow(simul_pois50))
simul_pois1000$n <- rep('Poisson, n=1000', nrow(simul_pois50))
simul_binom50$n <- rep('Binomial, n=50', nrow(simul_pois50))
simul_binom100$n <- rep('Binomial, n=100', nrow(simul_pois50))
simul_binom250$n <- rep('Binomial, n=250', nrow(simul_pois50))
simul_binom500$n <- rep('Binomial, n=500', nrow(simul_pois50))
simul_binom1000$n <- rep('Binomial, n=1000', nrow(simul_pois50))
simul_beta50$n <- rep('Beta, n=50', nrow(simul_pois50))
simul_beta100$n <- rep('Beta, n=100', nrow(simul_pois50))
simul_beta250$n <- rep('Beta, n=250', nrow(simul_pois50))
simul_beta500$n <- rep('Beta, n=500', nrow(simul_pois50))
simul_beta1000$n <- rep('Beta, n=1000', nrow(simul_pois50))
sim <- simul_pois50
sim[23:44, ] <- simul_pois100
sim[45:66, ] <- simul_pois250
sim[67:88, ] <- simul_pois500
sim[89:110, ] <- simul_pois1000
sim[111:132, ] <- simul_binom50
sim[133:154, ] <- simul_binom100
sim[155:176, ] <- simul_binom250
sim[177:198, ] <- simul_binom500
sim[199:220, ] <- simul_binom1000
sim[221:242, ] <- simul_beta50
sim[243:264, ] <- simul_beta100
sim[265:286, ] <- simul_beta250
sim[287:308, ] <- simul_beta500
sim[309:330, ] <- simul_beta1000
# Alterando níveis para ordenação no facet
sim$size = factor(sim$n, levels = c("Poisson, n=50", "Poisson, n=100",
"Poisson, n=250", "Poisson, n=500",
"Poisson, n=1000", "Binomial, n=50",
"Binomial, n=100", "Binomial, n=250",
"Binomial, n=500", "Binomial, n=1000",
"Beta, n=50", "Beta, n=100",
"Beta, n=250", "Beta, n=500",
"Beta, n=1000"))
sim$size2 = factor(sim$n, levels = c("Poisson, n=50", "Binomial, n=50",
"Beta, n=50", "Poisson, n=100",
"Binomial, n=100","Beta, n=100",
"Poisson, n=250", "Binomial, n=250",
"Beta, n=250", "Poisson, n=500",
"Binomial, n=500","Beta, n=500",
"Poisson, n=1000","Binomial, n=1000",
"Beta, n=1000"))
str(sim)
ggplot(sim,
aes(x = betas, y = valor, fill = rej)) +
geom_bar(stat = "identity") +
ggtitle('') + theme_bw() +
geom_hline(yintercept = 0.05, lwd = 0.7, col = 2, lty = 2) +
scale_fill_manual(values=c("#BDBDBD", "#424242"))+
theme(legend.position = "top",
legend.title=element_blank()
) +
xlab(expression(paste('Valores fixados de ' ,beta))) + ylab('Percentual')+
scale_y_continuous(labels = scales::percent) +
facet_wrap(~size, ncol = 5)
str(sim)
data <- read.csv2('experiments.csv', header =T, sep = ';', dec = '.')
setwd("~/machine_learning_ufpr/lab03/Analise")
data <- read.csv2('experiments.csv', header =T, sep = ';', dec = '.')
x11()
library(ggplot2)
data_graph <- data
data_graph$batch_size <- as.factor(data_graph$batch_size)
data_graph$learning_rate <- as.factor(data_graph$learning_rate)
levels(data_graph$learning_rate) = c('LR = 0.01',
'LR = 0.1',
'LR = 0.5')
data_graph$rede <- factor(data_graph$rede,
levels = c("lenet5", "alexnet", "xception", "mobilenetv2"))
levels(data_graph$rede) <- c('Lenet5', 'AlexNet', 'Xception', 'MobileNetV2')
data_graph$base <- factor(data_graph$base,
levels = c("original", "aumentada"))
levels(data_graph$base) <- c('Treino original', 'Treino aumentado')
g1<-ggplot(#subset(data_graph),
subset(data_graph, base == 'Treino original'),
aes(x=epochs,
y=accuracy,
col = factor(batch_size)))+
theme_bw()+
theme(legend.position = 'bottom',
legend.title = element_text(size=12, face="bold", ),
legend.text = element_text(size=12, face="bold"),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
axis.text.x=element_text(size=11),
axis.text.y=element_text(size=11))+
geom_point(position=position_dodge(width=0.9))+
xlab('Épocas') +
ylab('Acurácia')+
scale_colour_discrete("Batch size")+
#scale_x_discrete(breaks = seq(100,500,200))+
scale_x_continuous(breaks = seq(100,500,200),
limits = c(50,550))+
facet_grid(learning_rate~rede+base)
g1
names(data_graph)
c(1,2,3,4,6)
g1<-ggplot(#subset(data_graph),
subset(data_graph, base == 'Treino original')[,c(1,2,3,4,6)],
aes(x=epochs,
y=accuracy,
col = factor(batch_size)))+
theme_bw()+
theme(legend.position = 'bottom',
legend.title = element_text(size=12, face="bold", ),
legend.text = element_text(size=12, face="bold"),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
axis.text.x=element_text(size=11),
axis.text.y=element_text(size=11))+
geom_point(position=position_dodge(width=0.9))+
xlab('Épocas') +
ylab('Acurácia')+
scale_colour_discrete("Batch size")+
#scale_x_discrete(breaks = seq(100,500,200))+
scale_x_continuous(breaks = seq(100,500,200),
limits = c(50,550))+
facet_grid(learning_rate~rede+base)
g1
g1<-ggplot(data_graph[,c(1,2,3,4,6)],
#subset(data_graph, base == 'Treino original'),
aes(x=epochs,
y=accuracy,
col = factor(batch_size)))+
theme_bw()+
theme(legend.position = 'bottom',
legend.title = element_text(size=12, face="bold", ),
legend.text = element_text(size=12, face="bold"),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
axis.text.x=element_text(size=11),
axis.text.y=element_text(size=11))+
geom_point(position=position_dodge(width=0.9))+
xlab('Épocas') +
ylab('Acurácia')+
scale_colour_discrete("Batch size")+
#scale_x_discrete(breaks = seq(100,500,200))+
scale_x_continuous(breaks = seq(100,500,200),
limits = c(50,550))+
facet_grid(learning_rate~rede+base)
g1
g1<-ggplot(data_graph[,c(1,2,3,4,6)],
#subset(data_graph, base == 'Treino original'),
aes(x=epochs,
y=accuracy,
col = factor(batch_size)))+
theme_bw()+
theme(legend.position = 'bottom',
legend.title = element_text(size=12, face="bold", ),
legend.text = element_text(size=12, face="bold"),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
axis.text.x=element_text(size=11),
axis.text.y=element_text(size=11))+
geom_point(position=position_dodge(width=0.9))+
xlab('Épocas') +
ylab('Acurácia')+
scale_colour_discrete("Batch size")+
#scale_x_discrete(breaks = seq(100,500,200))+
scale_x_continuous(breaks = seq(100,500,200),
limits = c(50,550))+
#facet_grid(learning_rate~rede+base)
facet_grid(learning_rate~rede)
g1
ggsave(filename='fig.png',
plot=g1, device="png",
path=getwd(),
dpi=500,
height = 8, width = 16.5)
ggsave(filename='fig.png',
plot=g1, device="png",
path=getwd(),
dpi=500,
height = 4, width = 8)
ggsave(filename='fig.png',
plot=g1, device="png",
path=getwd(),
dpi=500,
height = 6, width = 8)
ggsave(filename='fig.png',
plot=g1, device="png",
path=getwd(),
dpi=500,
height = 6, width = 9)
data
data[,c(1,2,3,4,6)
]
subset(data, accuracy > 0.8)
subset(data, accuracy > 0.8)
tapply(X = data$rede,
INDEX = data$accuracy,
FUN = mean)
data$rede
tapply(X = data$accuracy,
INDEX = data$rede,
FUN = mean)
na.omit(data)
tapply(X = na.omit(data)$accuracy,
INDEX = na.omit(data)$rede,
FUN = mean)
tapply(X = na.omit(data)$accuracy,
INDEX = na.omit(data)$rede,
FUN = sd)
subset(data, accuracy > 0.9)
