dif1 <- (x1-m1)/s1
dif1
dif2 <- (x2-m2)/s2
dif1
dif2
sum(dif1)
sum(dif2)
round(sum(dif1))
round(sum(dif2))
round(sum(dif1), 3)
round(sum(dif2), 3)
round(sum(dif1), 5)
round(sum(dif2), 5)
round(sum(dif1), 10)
round(sum(dif2), 10)
round(sum(dif1), 15)
round(sum(dif2), 15)
round(sum(dif1), 150)
round(sum(dif2), 150)
round(sum(dif2), 100)
round(sum(dif1), 50)
round(sum(dif2), 50)
round(sum(dif1), 40)
round(sum(dif2), 40)
round(sum(dif1), 30)
round(sum(dif2), 30)
round(sum(dif1), 20)
round(sum(dif2), 20)
round(sum(dif1), 19)
round(sum(dif2), 19)
round(sum(dif1), 18)
round(sum(dif2), 18)
round(sum(dif1), 17)
round(sum(dif2), 17)
round(sum(dif1), 16)
round(sum(dif2), 16)
round(sum(dif1), 15)
round(sum(dif2), 15)
x1 - min(x1)
(x1 - min(x1))/(x1 - min(x1))
(x1 - min(x1))/(max(x1) - min(x1))
sum((x1 - min(x1))/(max(x1) - min(x1)))
sum((x2 - min(x2))/(max(x2) - min(x2)))
sum((x1 - min(x1))/(max(x1) - min(x1))) + sum((x2 - min(x2))/(max(x2) - min(x2)))
sum((x1 - min(x1))/(max(x1) - min(x1))) + sum((x2 - min(x2))/(max(x2) - min(x2)))
mean(c(12,10))
sd(c(12,10))
12-mean(c(12,10))
12-mean(c(12,10))/sd(c(12,10))
10-mean(c(12,10))/sd(c(12,10))
2+8+16
# valor falsas
1/3
1/2 - 1/3
1/2 - 1/3
(1/2 - 1/3)*5
5*(1/2 - 1/3)
5*(1/3 + 1/3 - 1/2)
setwd("~/Área de Trabalho/Disciplinas/APRENDIZADO DE MÁQUINA-INFO7004/lab01")
sizes <- c(5,10,20,30,40)
n_neighbors <- c(1,5,10,20,50)
metric <- c('chebyshev', 'euclidean', 'manhattan'#, 'mahalanobis'
)
algorithm <- c('auto', 'ball_tree', 'kd_tree', 'brute')
digit <- 0:9
experiments <- expand.grid(digits = digit,
algorithm = algorithm,
n_neighbors = n_neighbors,
metric = metric,
sizes = sizes
)
nrow(experiments)
names(experiments)
data <- read.csv2('experiments.csv', header =T, sep = ',', dec = '.')
nrow(data)
summary(data)
ggplot(data, aes(x=factor(digit),
y=precision,
col = factor(n_neighbors),
#size = metric,
#shape = metric,
#alpha = )
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
#scale_fill_manual(values=c("#A9A9A9", "#FFFAF0"))+
xlab('') +
ylab('Precision')+
# geom_errorbar(aes(x=sizes,
#                    ymin=mean_precision-sd_precision,
#                    ymax=mean_precision+sd_precision),
#                width=0.4,
#                #colour="orange",
#                alpha=0.9,
#                #size=1.3,
#                position = position_dodge(0.9)) +
facet_grid(algorithm~ metric+sizes+n_neighbors, scales = 'free')
library(tidyverse)
ggplot(data, aes(x=factor(digit),
y=precision,
col = factor(n_neighbors),
#size = metric,
#shape = metric,
#alpha = )
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
#scale_fill_manual(values=c("#A9A9A9", "#FFFAF0"))+
xlab('') +
ylab('Precision')+
# geom_errorbar(aes(x=sizes,
#                    ymin=mean_precision-sd_precision,
#                    ymax=mean_precision+sd_precision),
#                width=0.4,
#                #colour="orange",
#                alpha=0.9,
#                #size=1.3,
#                position = position_dodge(0.9)) +
facet_grid(algorithm~ metric+sizes+n_neighbors, scales = 'free')
x11
x11
x11()
x11
x11()
ggplot(data, aes(x=factor(digit),
y=precision,
col = factor(n_neighbors),
#size = metric,
#shape = metric,
#alpha = )
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
#scale_fill_manual(values=c("#A9A9A9", "#FFFAF0"))+
xlab('') +
ylab('Precision')+
# geom_errorbar(aes(x=sizes,
#                    ymin=mean_precision-sd_precision,
#                    ymax=mean_precision+sd_precision),
#                width=0.4,
#                #colour="orange",
#                alpha=0.9,
#                #size=1.3,
#                position = position_dodge(0.9)) +
facet_grid(algorithm~ metric+sizes+n_neighbors, scales = 'free')
ggplot(data, aes(x=factor(digit),
y=precision,
col = factor(n_neighbors),
#size = metric,
#shape = metric,
#alpha = )
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
#scale_fill_manual(values=c("#A9A9A9", "#FFFAF0"))+
xlab('') +
ylab('Precision')+
# geom_errorbar(aes(x=sizes,
#                    ymin=mean_precision-sd_precision,
#                    ymax=mean_precision+sd_precision),
#                width=0.4,
#                #colour="orange",
#                alpha=0.9,
#                #size=1.3,
#                position = position_dodge(0.9)) +
facet_grid(algorithm+metric~ sizes+n_neighbors, scales = 'free')
ggplot(data, aes(x=factor(digit),
y=precision,
col = factor(digit),
#size = metric,
#shape = metric,
#alpha = )
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(algorithm+metric~ sizes+n_neighbors, scales = 'free')
data$algorithm
#fill
#shape
#colours
#alpha
#facet
subset(data, data$algorithm == 'auto')
ggplot(subset(data, data$algorithm == 'auto'), aes(x=factor(digit),
y=precision,
col = factor(digit),
#size = metric,
#shape = metric,
#alpha = )
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(algorithm+metric~ sizes+n_neighbors, scales = 'free')
ggplot(subset(data, data$algorithm == 'auto'), aes(x=factor(digit),
y=precision,
col = factor(digit),
#size = metric,
#shape = metric,
#alpha = )
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(sizes+n_neighbors~algorithm+metric, scales = 'free')
ggplot(subset(data, data$algorithm == 'auto'), aes(x=factor(digit),
y=precision,
col = factor(digit),
#size = metric,
#shape = metric,
#alpha = )
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(sizes+metric~algorithm+n_neighbors, scales = 'free')
ggplot(subset(data, data$algorithm == 'auto'), aes(x=factor(digit),
y=precision,
#col = factor(digit),
#size = metric,
#shape = metric,
#alpha = )
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(sizes+metric~algorithm+n_neighbors, scales = 'free')
x11()
ggplot(subset(data, data$algorithm == 'auto'), aes(x=factor(digit),
y=precision,
#col = factor(digit),
#size = metric,
#shape = metric,
#alpha = )
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(sizes+metric~algorithm+n_neighbors, scales = 'free')
ggplot(subset(data#, data$algorithm == 'auto'
),
aes(x=factor(digit),
y=precision,
#col = factor(digit),
#size = metric,
#shape = metric,
#alpha = ,
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(sizes+metric~algorithm+n_neighbors, scales = 'free')
x11()
ggplot(subset(data#, data$algorithm == 'auto'
),
aes(x=factor(digit),
y=precision,
#col = factor(digit),
#size = metric,
#shape = metric,
#alpha = ,
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(sizes+metric~algorithm+n_neighbors, scales = 'free')
ggplot(subset(data#, data$algorithm == 'auto'
),
aes(x=factor(digit),
y=precision,
#col = factor(digit),
#size = metric,
#shape = metric,
#alpha = ,
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(metric+sizes~algorithm+n_neighbors, scales = 'free')
ggplot(subset(data#, data$algorithm == 'auto'
),
aes(x=factor(digit),
y=precision,
#col = factor(digit),
#size = metric,
#shape = metric,
#alpha = ,
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(metric+n_neighbors~algorithm+sizes, scales = 'free')
ggplot(subset(data#, data$algorithm == 'auto'
),
aes(x=factor(digit),
y=precision,
col = metric,
#size = metric,
#shape = metric,
#alpha = ,
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(n_neighbors~algorithm+sizes, scales = 'free')
ggplot(subset(data#, data$algorithm == 'auto'
),
aes(x=factor(digit),
y=precision,
col = algorithm,
#size = metric,
#shape = metric,
#alpha = ,
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(metric+n_neighbors~sizes, scales = 'free')
ggplot(subset(data#, data$algorithm == 'auto'
),
aes(x=factor(digit),
y=precision,
col = algorithm,
#size = metric,
#shape = metric,
#alpha = ,
))+
theme_bw() + #ylim(c(-1,2.5))+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(n_neighbors~sizes+metric, scales = 'free')
ggplot(subset(data#, data$algorithm == 'auto'
),
aes(x=factor(digit),
y=precision,
col = algorithm,
#size = metric,
#shape = metric,
#alpha = ,
))+
theme_bw() + #ylim(c(-1,2.5))+
theme(legend.position = 'bottom')+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(n_neighbors~sizes+metric, scales = 'free')
ggplot(subset(data#, data$algorithm == 'auto'
),
aes(x=factor(digit),
y=precision,
col = algorithm,
#size = metric,
#shape = metric,
#alpha = ,
))+
theme_bw() + #ylim(c(-1,2.5))+
theme(legend.position = 'bottom')+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(n_neighbors~metric+sizes, scales = 'free')
ggplot(subset(data#, data$algorithm == 'auto'
),
aes(x=factor(digit),
y=f1_score,
col = algorithm,
#size = metric,
#shape = metric,
#alpha = ,
))+
theme_bw() + #ylim(c(-1,2.5))+
theme(legend.position = 'bottom')+
geom_point(position=position_dodge(width=0.9))+
xlab('') +
ylab('Precision')+
facet_grid(n_neighbors~metric+sizes, scales = 'free')
library(tidyverse)
precision <- data[,c("algorithm","n_neighbors","metric","sizes","digits","precision")] %>%
spread(key=digits, value = precision)
names(precision)[5:14] <- c("0_precision", "1_precision",
"2_precision", "3_precision",
"4_precision", "5_precision",
"6_precision", "7_precision",
"8_precision","9_precision")
precision$key <- 1:nrow(precision)
recall <- data[,c("algorithm","n_neighbors","metric","sizes","digits","recall")] %>%
spread(key=digits, value = recall)
names(recall)[5:14] <- c("0_recall", "1_recall",
"2_recall", "3_recall",
"4_recall", "5_recall",
"6_recall", "7_recall",
"8_recall","9_recall")
recall$key <- 1:nrow(recall)
f1_score <- data[,c("algorithm","n_neighbors","metric","sizes","digits","f1_score")] %>%
spread(key=digits, value = f1_score)
names(f1_score)[5:14] <- c("0_f1_score", "1_f1_score",
"2_f1_score", "3_f1_score",
"4_f1_score", "5_f1_score",
"6_f1_score", "7_f1_score",
"8_f1_score","9_f1_score")
f1_score$key <- 1:nrow(f1_score)
support <- data[,c("algorithm","n_neighbors","metric","sizes","digits","support")] %>%
spread(key=digits, value = support)
names(support)[5:14] <- c("0_support", "1_support",
"2_support", "3_support",
"4_support", "5_support",
"6_support", "7_support",
"8_support","9_support")
support$key <- 1:nrow(support)
a <- left_join(precision, recall)
b <- left_join(a, f1_score)
c <- left_join(b, support)
names(c)
quantis <- data.frame(digit = 1:9,
`0%` = 1,
`25%` = 1,
`50%` = 1,
`75%` = 1,
`100%` = 1 )
quantis[1,2:6] <- as.vector(quantile(f1_score$`0`))
quantis[2,2:6] <- as.vector(quantile(f1_score$`1`))
quantis[3,2:6] <- as.vector(quantile(f1_score$`2`))
quantis[4,2:6] <- as.vector(quantile(f1_score$`3`))
quantis[5,2:6] <- as.vector(quantile(f1_score$`4`))
quantis[6,2:6] <- as.vector(quantile(f1_score$`5`))
quantis[7,2:6] <- as.vector(quantile(f1_score$`6`))
quantis[8,2:6] <- as.vector(quantile(f1_score$`7`))
quantis[9,2:6] <- as.vector(quantile(f1_score$`8`))
quantis
size5  <- subset(data, data$sizes == 5)
size10 <- subset(data, data$sizes == 10)
size20 <- subset(data, data$sizes == 20)
size30 <- subset(data, data$sizes == 30)
size40 <- subset(data, data$sizes == 40)
#---------------------------------------------------------------
names(data)
alg <- expand.grid(algorithm = levels(data$algorithm),
size = c(5,10,20,30,40))
alg$precision <- c(tapply(X = size5$precision,
INDEX = size5$algorithm,
FUN = mean),
tapply(X = size10$precision,
INDEX = size10$algorithm,
FUN = mean),
tapply(X = size20$precision,
INDEX = size20$algorithm,
FUN = mean),
tapply(X = size30$precision,
INDEX = size30$algorithm,
FUN = mean),
tapply(X = size40$precision,
INDEX = size40$algorithm,
FUN = mean))
alg$sd_precision <- c(tapply(X = size5$precision,
INDEX = size5$algorithm,
FUN = sd),
tapply(X = size10$precision,
INDEX = size10$algorithm,
FUN = sd),
tapply(X = size20$precision,
INDEX = size20$algorithm,
FUN = sd),
tapply(X = size30$precision,
INDEX = size30$algorithm,
FUN = sd),
tapply(X = size40$precision,
INDEX = size40$algorithm,
FUN = sd))
alg$recall <- c(tapply(X = size5$recall,
INDEX = size5$algorithm,
FUN = mean),
tapply(X = size10$recall,
INDEX = size10$algorithm,
FUN = mean),
tapply(X = size20$recall,
INDEX = size20$algorithm,
FUN = mean),
tapply(X = size30$recall,
INDEX = size30$algorithm,
FUN = mean),
tapply(X = size40$recall,
INDEX = size40$algorithm,
FUN = mean))
alg$sd_recall <- c(tapply(X = size5$recall,
INDEX = size5$algorithm,
FUN = sd),
tapply(X = size10$recall,
INDEX = size10$algorithm,
FUN = sd),
tapply(X = size20$recall,
INDEX = size20$algorithm,
FUN = sd),
tapply(X = size30$recall,
INDEX = size30$algorithm,
FUN = sd),
tapply(X = size40$recall,
INDEX = size40$algorithm,
FUN = sd))
